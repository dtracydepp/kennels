[{"/home/tracyd/workspace/kennels/src/index.js":"1","/home/tracyd/workspace/kennels/src/reportWebVitals.js":"2","/home/tracyd/workspace/kennels/src/components/Kennel.js":"3","/home/tracyd/workspace/kennels/src/components/animal/Animal.js":"4","/home/tracyd/workspace/kennels/src/components/location/Location.js":"5","/home/tracyd/workspace/kennels/src/components/location/LocationProvider.js":"6","/home/tracyd/workspace/kennels/src/components/employee/EmployeeProvider.js":"7","/home/tracyd/workspace/kennels/src/components/employee/EmployeeList.js":"8","/home/tracyd/workspace/kennels/src/components/employee/Employee.js":"9","/home/tracyd/workspace/kennels/src/components/customer/CustomerList.js":"10","/home/tracyd/workspace/kennels/src/components/customer/CustomerProvider.js":"11","/home/tracyd/workspace/kennels/src/components/customer/Customer.js":"12"},{"size":453,"mtime":1606842571084,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1606151684639,"results":"15","hashOfConfig":"14"},{"size":1305,"mtime":1606255169374,"results":"16","hashOfConfig":"14"},{"size":259,"mtime":1606842570872,"results":"17","hashOfConfig":"14"},{"size":282,"mtime":1606168091906,"results":"18","hashOfConfig":"14"},{"size":1232,"mtime":1606167587115,"results":"19","hashOfConfig":"14"},{"size":1232,"mtime":1606255169415,"results":"20","hashOfConfig":"14"},{"size":1098,"mtime":1606255169411,"results":"21","hashOfConfig":"14"},{"size":276,"mtime":1606255169407,"results":"22","hashOfConfig":"14"},{"size":1098,"mtime":1606255169402,"results":"23","hashOfConfig":"14"},{"size":1232,"mtime":1606255169404,"results":"24","hashOfConfig":"14"},{"size":272,"mtime":1606255169399,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vwzclb",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/tracyd/workspace/kennels/src/index.js",[],"/home/tracyd/workspace/kennels/src/reportWebVitals.js",[],"/home/tracyd/workspace/kennels/src/components/Kennel.js",[],["57","58"],"/home/tracyd/workspace/kennels/src/components/animal/Animal.js",[],"/home/tracyd/workspace/kennels/src/components/location/Location.js",[],"/home/tracyd/workspace/kennels/src/components/location/LocationProvider.js",["59"],"import React, { useState, useEffect } from \"react\"\n\n/*\n    The context is imported and used by individual components\n    that need data\n*/\nexport const LocationContext = React.createContext()\n\n/*\n This component establishes what data can be used.\n */\nexport const LocationProvider = (props) => {\n    const [locations, setLocations] = useState([])\n\n    const getLocations = () => {\n        return fetch(\"http://localhost:8088/locations\")\n            .then(res => res.json())\n            .then(setLocations)\n    }\n\n    const addLocation = location => {\n        return fetch(\"http://localhost:8088/locations\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(location)\n        })\n            .then(getLocations)\n    }\n\n    /*\n        You return a context provider which has the\n        `locations` state, the `addLocation` function,\n        and the `getLocation` function as keys. This\n        allows any child elements to access them.\n    */\n    return (\n        <LocationContext.Provider value={{\n            locations, addLocation, getLocations\n        }}>\n            {props.children}\n        </LocationContext.Provider>\n    )\n}",["60","61"],"/home/tracyd/workspace/kennels/src/components/employee/EmployeeProvider.js",["62"],"import React, { useState, useEffect } from \"react\"\n\n/*\n    The context is imported and used by individual components\n    that need data\n*/\nexport const EmployeeContext = React.createContext()\n\n/*\n This component establishes what data can be used.\n */\nexport const EmployeeProvider = (props) => {\n    const [employees, setEmployees] = useState([])\n\n    const getEmployees = () => {\n        return fetch(\"http://localhost:8088/employees\")\n            .then(res => res.json())\n            .then(setEmployees)\n    }\n\n    const addEmployee = employee => {\n        return fetch(\"http://localhost:8088/employees\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(employee)\n        })\n            .then(getEmployees)\n    }\n\n    /*\n        You return a context provider which has the\n        `employee` state, the `addEmployee` function,\n        and the `getEmployees` function as keys. This\n        allows any child elements to access them.\n    */\n    return (\n        <EmployeeContext.Provider value={{\n            employees, addEmployee, getEmployees\n        }}>\n            {props.children}\n        </EmployeeContext.Provider>\n    )\n}","/home/tracyd/workspace/kennels/src/components/employee/EmployeeList.js",["63"],"import React, { useContext, useEffect } from \"react\"\nimport { EmployeeContext } from \"./EmployeeProvider\"\nimport { Employee } from \"./Employee\"\nimport \"./Employee.css\"\n\nexport const EmployeeList = () => {\n    // This state changes when `getEmployees()` is invoked below\n    const {employees, getEmployees } = useContext(EmployeeContext)\n\n    /*\n        What's the effect this is reponding to? Component was\n        \"mounted\" to the DOM. React renders blank HTML first,\n        then gets the data, then re-renders.\n    */\n    useEffect(() => {\n        console.log(\"EmployeeList: Initial render before data\")\n        getEmployees()\n    }, [])\n\n    /*\n        This effect is solely for learning purposes. The effect\n        it is responding to is that the location state changed.\n    */\n    useEffect(() => {\n        console.log(\"EmployeeList: Employee state changed\")\n        console.log(employees)\n    }, [employees])\n\n    return (\n        <div className=\"employees\">\n        {\n            employees.map(employee=> <Employee key={employee.id} employee={employee} />)\n        }\n        </div>\n    )\n}","/home/tracyd/workspace/kennels/src/components/employee/Employee.js",[],"/home/tracyd/workspace/kennels/src/components/customer/CustomerList.js",["64"],"import React, { useContext, useEffect } from \"react\"\nimport { CustomerContext } from \"./CustomerProvider\"\nimport { Customer } from \"./Customer\"\nimport \"./Customer.css\"\n\nexport const CustomerList = () => {\n    // This state changes when `getCustomers()` is invoked below\n    const {customers, getCustomers } = useContext(CustomerContext)\n\n    /*\n        What's the effect this is reponding to? Component was\n        \"mounted\" to the DOM. React renders blank HTML first,\n        then gets the data, then re-renders.\n    */\n    useEffect(() => {\n        console.log(\"CustomerList: Initial render before data\")\n        getCustomers()\n    }, [])\n\n    /*\n        This effect is solely for learning purposes. The effect\n        it is responding to is that the location state changed.\n    */\n    useEffect(() => {\n        console.log(\"CustomerList: Customer state changed\")\n        console.log(customers)\n    }, [customers])\n\n    return (\n        <div className=\"customers\">\n        {\n            customers.map(customer=> <Customer key={customer.id} customer={customer} />)\n        }\n        </div>\n    )\n}","/home/tracyd/workspace/kennels/src/components/customer/CustomerProvider.js",["65"],"import React, { useState, useEffect } from \"react\"\n\n/*\n    The context is imported and used by individual components\n    that need data\n*/\nexport const CustomerContext = React.createContext()\n\n/*\n This component establishes what data can be used.\n */\nexport const CustomerProvider = (props) => {\n    const [customers, setCustomers] = useState([])\n\n    const getCustomers = () => {\n        return fetch(\"http://localhost:8088/customers\")\n            .then(res => res.json())\n            .then(setCustomers)\n    }\n\n    const addCustomer = customer => {\n        return fetch(\"http://localhost:8088/customers\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(customer)\n        })\n            .then(getCustomers)\n    }\n\n    /*\n        You return a context provider which has the\n        `customer` state, the `addCustomer` function,\n        and the `getCustomers` function as keys. This\n        allows any child elements to access them.\n    */\n    return (\n        <CustomerContext.Provider value={{\n            customers, addCustomer, getCustomers\n        }}>\n            {props.children}\n        </CustomerContext.Provider>\n    )\n}","/home/tracyd/workspace/kennels/src/components/customer/Customer.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":1,"column":27,"nodeType":"72","messageId":"73","endLine":1,"endColumn":36},{"ruleId":"66","replacedBy":"74"},{"ruleId":"68","replacedBy":"75"},{"ruleId":"70","severity":1,"message":"71","line":1,"column":27,"nodeType":"72","messageId":"73","endLine":1,"endColumn":36},{"ruleId":"76","severity":1,"message":"77","line":18,"column":8,"nodeType":"78","endLine":18,"endColumn":10,"suggestions":"79"},{"ruleId":"76","severity":1,"message":"80","line":18,"column":8,"nodeType":"78","endLine":18,"endColumn":10,"suggestions":"81"},{"ruleId":"70","severity":1,"message":"71","line":1,"column":27,"nodeType":"72","messageId":"73","endLine":1,"endColumn":36},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar",["82"],["83"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getEmployees'. Either include it or remove the dependency array.","ArrayExpression",["84"],"React Hook useEffect has a missing dependency: 'getCustomers'. Either include it or remove the dependency array.",["85"],"no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},"Update the dependencies array to be: [getEmployees]",{"range":"90","text":"91"},"Update the dependencies array to be: [getCustomers]",{"range":"92","text":"93"},[637,639],"[getEmployees]",[637,639],"[getCustomers]"]